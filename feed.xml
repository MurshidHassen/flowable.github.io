<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.2.1">Jekyll</generator><link href="http://www.flowable.org/feed.xml" rel="self" type="application/atom+xml" /><link href="http://www.flowable.org/" rel="alternate" type="text/html" /><updated>2016-11-01T09:19:11+01:00</updated><id>http://www.flowable.org/</id><title>Flowable</title><subtitle>The BPMN engine</subtitle><entry><title>Flowable 5.22.0 release</title><link href="http://www.flowable.org/blog/2016/10/13/flowable-5.22.0-release.html" rel="alternate" type="text/html" title="Flowable 5.22.0 release" /><published>2016-10-13T00:00:00+02:00</published><updated>2016-10-13T00:00:00+02:00</updated><id>http://www.flowable.org/blog/2016/10/13/flowable-5.22.0-release</id><content type="html" xml:base="http://www.flowable.org/blog/2016/10/13/flowable-5.22.0-release.html">&lt;p&gt;Today we released the first Flowable engine version (5.22.0). This release is a drop-in replacement for Activiti 5.21.0. There have been no package renaming or config file name changes, to make it as easy as possible to move to the Flowable project.
Basically you only need to change the Maven dependency to:&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.flowable&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;flowable-engine&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;5.22.0&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We moved the version 5 code to the flowable5 branch on Github &lt;a href=&quot;https://github.com/flowable/flowable-engine/tree/flowable5&quot;&gt;https://github.com/flowable/flowable-engine/tree/flowable5&lt;/a&gt;.
The version 6 code is now on master &lt;a href=&quot;https://github.com/flowable/flowable-engine&quot;&gt;https://github.com/flowable/flowable-engine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The 5.22.0 release has the following highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First Flowable release. Except from the different Maven group (org.flowable) and artefact id (flowable-engine etc), there are no differences when compared to a new Activiti version. 
No changes have been made to package names or config file names.&lt;/li&gt;
&lt;li&gt;Introduction of transient variables. Transient variables won&amp;#39;t be persisted in the Activiti variable tables, but are still available on the execution for the duration of a single transaction. 
Transient variables can for example be used to store a REST response that is only needed to create a request to another REST service, or to use a Java service task result in the next 
Java service task without it getting persisted. You can read more about it &lt;a href=&quot;http://www.jorambarrez.be/blog/2016/09/01/how-to-use-transient-variables-in-activiti/&quot;&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Several bug fixes and smaller enhancements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A lot of people will also be wondering what will happen with the version 6 engine. It&amp;#39;s our main focus to get a new beta release out as soon as possible and 
we want to get the final 6.0 release out shortly after.&lt;/p&gt;

&lt;p&gt;We understand that there will be a bit of confusion around starting the Flowable project. But we do our best to keep the changes you need to do to a minimum.
We don&amp;#39;t plan any package renaming or config filename changes for example. For now, please get in contact with us through the forum &lt;a href=&quot;http://forum.flowable.org&quot;&gt;http://forum.flowable.org&lt;/a&gt;,
and by creating issues on the Github issues page &lt;a href=&quot;https://github.com/flowable/flowable-engine/issues&quot;&gt;https://github.com/flowable/flowable-engine/issues&lt;/a&gt;.
The developers of the Flowable project are keen to help you answering your questions and helping out with possible issues.
The 5.22.0 release is the starting point for the Flowable project, a lot more releases will follow.&lt;/p&gt;</content><author><name>flowable</name></author><summary>Today we released the first Flowable engine version (5.22.0). This release is a drop-in replacement for Activiti 5.21.0. There have been no package renaming or config file name changes, to make it as easy as possible to move to the Flowable project.
Basically you only need to change the Maven dependency to:</summary></entry><entry><title>Flowable and Activiti: What the Fork?!</title><link href="http://www.flowable.org/blog/2016/10/12/flowable-and-activiti.html" rel="alternate" type="text/html" title="Flowable and Activiti: What the Fork?!" /><published>2016-10-12T00:00:00+02:00</published><updated>2016-10-12T00:00:00+02:00</updated><id>http://www.flowable.org/blog/2016/10/12/flowable-and-activiti</id><content type="html" xml:base="http://www.flowable.org/blog/2016/10/12/flowable-and-activiti.html">&lt;p&gt;Ironically, the first thing we want to say is that we’re not fans of forking projects.  We have been the core developers of the Activiti Java Business Process Management (BPM) project right from its beginnings to its current state, so this has not been an easy or quick decision.  We acknowledge Alfresco’s stewardship of the Activiti.org project, and as employees we enjoyed considerable freedom to develop the project over several years.  However, things didn&amp;#39;t work out as we expected or hoped.  We came to the conclusion the only way to continue evolving our ideas was to fork.&lt;/p&gt;

&lt;h2&gt;Forking Happens&lt;/h2&gt;

&lt;p&gt;There are many examples of forks in open source, as &lt;a href=&quot;http://thenewstack.io/may-fork-short-history-open-source-forks/&quot;&gt;Swapnil Bhartiya&lt;/a&gt; has recently described in &lt;a href=&quot;http://thenewstack.io/may-fork-short-history-open-source-forks/&quot;&gt;May the Fork Be with You&lt;/a&gt;, including mention of one of the live topics of discussion currently within the Docker community. With Docker, the main concern appears to be the mixing of competitive and commercial elements into a core used by different commercial organizations, with people voicing pros (e.g. &lt;a href=&quot;https://robhirschfeld.com/2016/08/31/why-fork-docker-complexity-wack-a-mole-and-commercial-open-source/&quot;&gt;Rob Hirschfeld&lt;/a&gt; and cons (e.g. &lt;a href=&quot;https://developer.ibm.com/opentech/2016/09/07/what-the-fork-docker/&quot;&gt;Doug Davis&lt;/a&gt;).  Let’s be clear about our intentions – the Flowable fork will remain liberal and open, and will be the focus of our future efforts in BPM, hosted on &lt;a href=&quot;https://github.com/Flowable&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Forking Can Be Healthy&lt;/h2&gt;

&lt;p&gt;In the past, &lt;a href=&quot;http://www.techrepublic.com/article/why-you-should-fork-your-next-open-source-project/&quot;&gt;Matt Assay&lt;/a&gt; pointed out that forking is often good for innovation, which very much underpins our hopes.  By keeping to our business process-oriented roots, we can innovate in the core of the BPM engine far more readily.  Not all forks are successful, as Matthew Hughes highlights in &lt;a href=&quot;http://www.makeuseof.com/tag/forking-good-great-ugly/&quot;&gt;Forking Good Great Ugly&lt;/a&gt;, but another recent fork, ownCloud / Nextcloud, where the development team became unhappy with the commercial management, seems to be succeeding &lt;a href=&quot;http://www.zdnet.com/article/nextcloud-releases-owncloud-fork-ahead-of-schedule/&quot;&gt;NextCloud release OwnCloud fork ahead of schedule&lt;/a&gt;. In a similar vein, we have just pushed our first release of the fork for the &lt;a href=&quot;http://flowable.org/downloads&quot;&gt;V5 engine&lt;/a&gt;, including a powerful new feature, &lt;em&gt;transient variables&lt;/em&gt;.  We will be releasing an update to V6 soon as well.&lt;/p&gt;

&lt;h2&gt;Forking Can Confuse&lt;/h2&gt;

&lt;p&gt;Obviously, our biggest worry is the confusion to developers that a fork can introduce.  Only time will tell if that can be overcome.  We will make sure that Flowable is a drop-in replacement for Activiti, with no package renaming or API changes needed.  If you’re unsure of jumping in, take a look at the authors in the code and the people working on the Flowable project.  We are the people that know it best, and who have been driving the community, contributions and evolution over the years.  &lt;/p&gt;

&lt;h2&gt;Thank You For Your Support&lt;/h2&gt;

&lt;p&gt;We&amp;#39;ve had a whole bunch of people contact us about their concerns with how things had been going (or more accurately, not going) and to show support in what we&amp;#39;re doing with this fork. Please take a look and get involved.  Now’s the time to make your business processes Flowable.&lt;/p&gt;</content><author><name>flowable</name></author><summary>Ironically, the first thing we want to say is that we’re not fans of forking projects.  We have been the core developers of the Activiti Java Business Process Management (BPM) project right from its beginnings to its current state, so this has not been an easy or quick decision.  We acknowledge Alfresco’s stewardship of the Activiti.org project, and as employees we enjoyed considerable freedom to develop the project over several years.  However, things didn&amp;#39;t work out as we expected or hoped.  We came to the conclusion the only way to continue evolving our ideas was to fork.</summary></entry></feed>
